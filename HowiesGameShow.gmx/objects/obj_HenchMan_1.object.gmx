<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_HenchMan1</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables

hp = 100;
spd = 3;
dir = 0;
rspeed = 18;

sightRange = 500;
shootRange = 450;

vari = 4;
cooldown = 15;
b_x = 22;
b_y = 8;
bb_x = 22;
bb_y = 7;

image_angle = random(360);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shooting and Movement

//Roatation
dir = point_direction(x, y, mouse_x, mouse_y);
image_angle += sin(degtorad(dir - image_angle)) * rspeed;

//Sighting
if (!collision_line(x, y, obj_Player.x, obj_Player.y, obj_Wall, true, true) &amp;&amp; distance_to_object(obj_Player) &lt;= sightRange) {

    image_angle = point_direction(x, y, obj_Player.x, obj_Player.y);
    
    if (distance_to_object(obj_Player) &lt;= shootRange) {
    
        //Fire
        if (cooldown &lt;= 0) {
        
            obj_Camera.shake = 1.5;
            cooldown = 15;
            
            var b = obj_EnemyBullet_1;
            instance_create(x + lengthdir_x(b_x, image_angle) - lengthdir_y(b_y, image_angle), y + lengthdir_y(b_x, image_angle) + lengthdir_x(b_y, image_angle), b);
            instance_create(x + lengthdir_x(bb_x, image_angle) - lengthdir_y(bb_y, image_angle), y + lengthdir_y(bb_x, image_angle) + lengthdir_x(bb_y, image_angle), b);
            effect_create_above(ef_smokeup, b_x, b_y, .1, c_ltgray);
            effect_create_above(ef_smokeup, bb_x, bb_y, .1, c_ltgray);
            
        }
    
    }

}

//Cooldown
cooldown -= 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug Circle

draw_self();

draw_set_color(c_red);
draw_circle(x, y, sightRange, true);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
